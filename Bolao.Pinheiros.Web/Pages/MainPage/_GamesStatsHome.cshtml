@model Bolao.Pinheiros.BusinessLogic.Models.Root
@if (Model != null && Model.games != null && Model.games.Any())
{
    <div class="game-stats">
        <div class="negrito">Estatísticas - @(Model.mainGame.homeCompetitor.name)</div>
        <br>
        <div class="game-stats-info">
            <div class="team-victory" title="@(string.Join(", ", Model.GetHomeWinningsTeams().Select(x => x.name)))">
                <label class="team negrito">Vitórias</label>
                <label class="team-value">@(Model.GetHomeWinnings().Count())</label>
            </div>
            <div class="team-draw" title="@(string.Join(", ", Model.GetHomeDrawsTeams().Select(x => x.name)))">
                <label class="team negrito">Empate</label>
                <label class="team-value">@(Model.GetHomeDraws().Count())</label>
            </div>
            <div class="team-victory" title="@(string.Join(", ", Model.GetHomeDefeatsTeams().Select(x => x.name)))">
                <label class="team negrito">Derrotas</label>
                <label class="team-value">@(Model.GetHomeDefeats().Count())</label>
            </div>
        </div>
        <div class="game-stats-info">
            <div class="head-head-score">
                <label class="team negrito">Gols</label>
                <label class="team-value">@(Model.GetHomeGamesGoals())</label>
            </div>
            <div class="head-head-score">
                <label class="team negrito">Média de gols</label>
                <label class="team-value">@(Model.GetAverageGoalsHome(false))</label>
            </div>
            <div class="head-head-score">
                <label class="team negrito">Ambos marcaram</label>
                <label class="team-value p-0">
                    @{
                        var bothScored = Model.GetHomeGames().Where(x => x.DidBothTeamScore()).Count();
                    }
                    @(bothScored) jogos - @(MathUtils.CalcPercent(bothScored, Model.GetHomeGames().Count()))%
                </label>
            </div>
            <div class="head-head-score">
                <label class="team negrito">Ambos não marcaram</label>
                <label class="team-value p-0">
                    @{
                        var bothDidntScore = Model.GetHomeGames().Where(x => !x.DidBothTeamScore()).Count();
                    }
                    @(bothDidntScore) jogos - @(MathUtils.CalcPercent(bothDidntScore, Model.GetHomeGames().Count()))%
                </label>
            </div>
        </div>
        <div class="game-stats-info">
            <div class="head-head-score">
                <label class="team negrito">GP @(Model.mainGame.homeCompetitor.name)</label>
                <label class="team-value">@(Model.GetHomeGamesGP())</label>
            </div>
            <div class="head-head-score">
                <label class="team negrito">GC @(Model.mainGame.homeCompetitor.name)</label>
                <label class="team-value">@(Model.GetHomeGamesGC())</label>
            </div>
            <div class="max-score" title="@(Model.GetGreaterHomeScore().ToString())">
                <label class="team negrito">Maior quantidade de gols em um jogo</label>
                <label class="team-value">@(Model.GetMaximumGoalsHome())</label>
            </div>
            <div class="minimum-score" title="@(Model.GetLowerHomeScore().ToString())">
                <label class="team negrito">Menor quantidade de gols em um jogo</label>
                <label class="team-value">@(Model.GetMinimumGoalsHome())</label>
            </div>
        </div>
        <div class="game-goals-info">
            <div class="negrito">Gols</div>
            <br />
            <div class="game-goals-first-minutes">
                <label class="team negrito">10 min</label>
                <label class="team-value">
                    @{
                        var firstTenMinutes = Model.GetGoalsFirstTenMinutesHome();
                    }
                    @(firstTenMinutes) - @(MathUtils.CalcPercent(firstTenMinutes, Model.GetHomeGamesGoals()))%
                </label>
            </div>
            @{
                var firstHalf = Model.GetGoalsFirstHalfHome();
                var extraFirstTime = Model.GetGoalsFirstExtraTimeHome();
            }
            <div class="head-head-score" title="Acréscimos: @(extraFirstTime) gols - @(MathUtils.CalcPercent(extraFirstTime, Model.GetHomeGamesGoals()))%">
                <label class="team negrito">1º tempo</label>
                <label class="team-value">
                    @(firstHalf) - @(MathUtils.CalcPercent(firstHalf, Model.GetHomeGamesGoals()))%
                </label>
            </div>
            @{
                var secondHalf = Model.GetGoalsSecondHalfHome();
                var extraSecondTime = Model.GetGoalsSecondExtraTimeHome();
            }
            <div class="max-score" title="Acréscimos: @(extraSecondTime) gols - @(MathUtils.CalcPercent(extraSecondTime, Model.GetHomeGamesGoals()))%">
                <label class="team negrito">2º tempo</label>
                <label class="team-value">
                    @(secondHalf) - @(MathUtils.CalcPercent(secondHalf, Model.GetHomeGamesGoals()))%
                </label>
            </div>
        </div>
    </div>
}